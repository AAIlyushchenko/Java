package ru.geekbrains.catch_the_drop;


//1.Расширить задачу про котов и тарелки с едой.
//2.Сделать так, чтобы в тарелке с едой не могло получиться отрицательного количества еды (например, в миске 10 еды, а кот пытается покушать 15-20).
//3.Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны). Если коту удалось покушать (хватило еды), сытость = true.
//4.Считаем, что если коту мало еды в тарелке, то он её просто не трогает, то есть не может быть наполовину сыт (это сделано для упрощения логики программы).
//5.Создать массив котов и тарелку с едой, попросить всех котов покушать из этой тарелки и потом вывести информацию о сытости котов в консоль.
//6.Добавить в тарелку метод, с помощью которого можно было бы добавлять еду в тарелку.



public class Main {

    public static void main(String[] args) {
        Cat[] catArray = new Cat[2]; //Задание 5. Создаем массив котов
        catArray[0] = new Cat("Barsik", 15, false); //Задание 5. Создаем массив котов
        catArray[1] = new Cat("Mursik", 15, false); //Задание 5. Создаем массив котов
        Plate plate = new Plate(10); //Создаем тарелку с необходимым количество еды
        plate.info(); //Показываем сколько в тарелке изначально было еды
        for (int i = 0; i< catArray.length; i++) { //Отправляем всех котов есть из тарелки
            catArray[i].eat(plate);
            catArray[i].fullnessInfo(); //Задание 3.Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны). Если коту удалось покушать (хватило еды), сытость = true.
            System.out.println();
        }
        plate.info(); //Показать сколько в тарелке осталось еды
        plate.fillPlate(10); //Задание 6. Добавить в тарелку еды
        plate.info(); //показать, что в тарелку мы добавили еду
    }
}
